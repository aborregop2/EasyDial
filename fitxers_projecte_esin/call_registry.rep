//Call registry ser√° un AVL de Phone.

struct node{
    phone _tl;  
    node* _fesq;
    node* _fdret;
    nat _altura;
    node(const phone &tl, node* fesq = nullptr, node* fdret = nullptr) throw(error);
};

node *_arrel;
nat _size;

static nat altura(node *n);
static int factor_equilibri(node *n);
static node* rotacio_dreta(node *y);
static node* rotacio_esquerra(node *x);
static node* insereix(node *n, phone p);
static node* esborra(node *n, nat num);
static node* ajunta ( node *n1 , node *n2 ) throw ();
static node * elimina_maxim ( node * n) throw ();

static node* cpyCallRegistry(node *n);
static void deleteCallRegistry(node *n);
static void findPhone(node *n, node* &p, nat num);
static void inorder(node *n, vector<phone>& V);
static void mergeSortNoms(vector<phone> &V);
static void recalcula_altures(node *p);

